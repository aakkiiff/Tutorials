# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: nginx-config
# data:
#   default.conf: |
#     # Paste your contents of ./nginx/nginx.conf here.
#     # For example:
#     server {
#         listen 80;
#         index index.php index.html;
#         server_name localhost;
#         root /var/www/html/laraapp/public;
#         location / {
#             try_files $uri $uri/ /index.php?$query_string;
#         }
#         location ~ \.php$ {
#             try_files $uri =404;
#             fastcgi_split_path_info ^(.+\.php)(/.+)$;
#             fastcgi_pass php:9000;
#             fastcgi_index index.php;
#             include fastcgi_params;
#             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#             fastcgi_param PATH_INFO $fastcgi_path_info;
#         }
#     }
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      containers:
      - name: nginx
        image: devopsaes/phptest:nginx3
        ports:
        - containerPort: 80
        volumeMounts:
        - name: src-volume
          mountPath: /var/www/html

      volumes:
      - name: src-volume
        persistentVolumeClaim:
          claimName: src-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: server
spec:
  type: NodePort  # You could use LoadBalancer if running in a cloud environment
  selector:
    app: server
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30080  # Ensure this is in the valid NodePort range (30000-32767)
