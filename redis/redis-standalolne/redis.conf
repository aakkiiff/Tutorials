# =============================
# NETWORK / SECURITY
# =============================
bind 0.0.0.0
protected-mode yes

# =============================
# TLS / SSL CONFIGURATION
# =============================
# tls-port 6379                       
port 6379

# tls-cert-file /usr/local/etc/redis/redis-ssl/redis.crt
# tls-key-file /usr/local/etc/redis/redis-ssl/redis.key
# tls-ca-cert-file /usr/local/etc/redis/redis-ssl/redis.crt

# Set to 'yes' to require client certificates (optional mutual TLS)
tls-auth-clients no                 

# =============================
# LOGGING & MONITORING
# =============================
loglevel notice                      

# =============================
# USER ACLS (Access Control Lists)
# =============================
# File for managing users and ACLs (roles/permissions)
aclfile /usr/local/etc/redis/users.acl

# =============================
# RDB SNAPSHOTS (POINT-IN-TIME PERSISTENCE)
# =============================
# Save snapshot if at least 1 key changed in 1 hour (low write activity)
save 3600 1     
# Save snapshot if 100 keys changed in 5 minutes (moderate activity)
save 300 100    
# Save snapshot if 1,000 keys changed in 1 minute (high activity)
save 60 1000  
# Directory to store RDB snapshots
dir /data   
# RDB filename
dbfilename dump.rdb  
# Compress RDB file to save disk space (recommended for large datasets)
rdbcompression yes                    

# =============================
# AOF (APPEND-ONLY FILE) PERSISTENCE
# =============================
appendonly yes                        
# Enable AOF logging for durability
appendfilename "appendonly.aof"       
# Name of AOF file
appendfsync everysec                  
# Sync AOF to disk every second (balance durability & performance)
auto-aof-rewrite-percentage 100       
# Trigger AOF rewrite if file grows 100% larger than original
auto-aof-rewrite-min-size 64mb        
# Minimum size before rewriting AOF
aof-load-truncated yes                 
# Load truncated AOF safely if file ends unexpectedly

# =============================
# MEMORY MANAGEMENT
# =============================
maxmemory 2gb                         
# Max RAM Redis can use; adjust according to host/container
maxmemory-policy allkeys-lru          
 # Evict least recently used keys when maxmemory reached (good for caching)
# maxmemory-policy volatile-lru       
 # Alternative: evict only keys with TTL (better for database usage)

# =============================
# ACTIVE DEFRAGMENTATION
# =============================
activedefrag yes                     
  # Enable online memory defragmentation to reduce fragmentation
active-defrag-threshold-lower 10     
 # Lower threshold (% fragmentation) to start defragmentation
active-defrag-threshold-upper 100    
 # Upper threshold (% fragmentation) to stop defragmentation

# =============================
# PERFORMANCE / IO THREADS
# =============================
io-threads 2                          
 # Number of threads to handle network I/O (Redis commands still single-threaded)
io-threads-do-reads yes               
 # Use threads for read requests as well (improves throughput for many clients)

